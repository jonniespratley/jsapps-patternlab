<!-- APP-TOP-BAR -->
<style>
    .img-avatar {
        height: 30px;
        border-radius: 50%;
    }
</style>

{{> organisms-drawer-temporary(header: true)}}

<header class="page-top-bar mdc-top-app-bar mdc-theme--primary-bg mdc-top-app-bar--static {{#fixed}}mdc-top-app-bar--fixed{{/fixed}}">
    <div class="mdc-top-app-bar__row flex flex--spaced">
        <section class="mdc-top-app-bar__section mdc-top-app-bar__section--align-start">
            <button class="hamburger mdc-top-app-bar__navigation-icon app__drawer-toggle" title="Toggle Drawer" data-toggle="drawer" data-type="temporary">
                <span class="material-icons">menu</span>
            </button>
            <span class="mdc-top-app-bar__title">{{ pageTitle }}</span>
        </section>
        <section class="mdc-toolbar__sectio"></section>
        <section class="mdc-top-app-bar__section mdc-top-app-bar__section--align-end">
            {{> molecules-app-bar-action(icon: "notifications", label: "Notifications", className: "hidden-sm-down")}} 
            {{> molecules-app-bar-action(icon: "apps", label: "Apps", className: "hidden-sm-down")}} 
            {{> molecules-app-bar-action(icon: "tune", label: "Settings", className: "app__settings-toggle hidden-sm-down")}}
            {{> molecules-app-bar-action(icon: "more_vert", label: "More", className: "app__user-menu-toggle hidden-md-up")}}
            <a href="#" class="mdc-top-app-bar__action-item app__user-toggle">
                {{> atoms-avatar}}
            </a>
        </section>
    </div>
</header>
{{> organisms-app-settings }}

<script>
    // Instantiation

    /*
    var menuEl = document.querySelector('.mdc-menu');
    var menu = new mdc.menu.MDCMenu(menuEl);
    var menuButtonEl = document.querySelector('.app__user-toggle');

    // Toggle menu open
    menuButtonEl.addEventListener('click', function () {
        menu.open = !menu.open;
    });

    // Listen for selected item
    menuEl.addEventListener('MDCMenu:selected', function (evt) {
        var detail = evt.detail;
    });

    // Set Anchor Corner to Bottom End
    //menu.setAnchorCorner(mdc.menu.Corner.BOTTOM_LEFT);

    // Turn off menu open animations
    menu.quickOpen = true;
*/

    (function () {

        let drawerToggle = document.querySelector('.app__drawer-toggle');
        if (drawerToggle) {
            drawerToggle.addEventListener('click', function (e) {
                console.log('Find and toggle drawer');
                let appDrawers = document.querySelectorAll('.app__drawer');
                if(appDrawers){
                    appDrawers.forEach(function(el){
                        var appDrawer = el;
                        var type = el.getAttribute('data-type');

                        //console.log(type);
                        console.log('Check screensize');
                        console.log('Toggle', type);      
                        
                        if(type=== 'temporary'){
                            let drawer = new mdc.drawer.MDCTemporaryDrawer(appDrawer);
                            drawer.open = !drawer.open;  
                        } else if( type=== 'persistent'){
                            
                            let drawer = new mdc.drawer.MDCPersistentDrawer(appDrawer);
                            drawer.open = !drawer.open;
                            
                        }
                    });
                }

            });
        }

        let settingsToggle = document.querySelector('.app__settings-toggle');
        if (settingsToggle) {
            settingsToggle.addEventListener('click', function (e) {
                console.log('Find and toggle settings drawer');
                let appDrawer = document.querySelector('.app__settings-drawer');
                if (appDrawer) {
                    let drawer = new mdc.drawer.MDCTemporaryDrawer(appDrawer);
                    drawer.open = !drawer.open;
                }
            });
        }
    })();


$(function(){
    var appDrawers = $('.app__drawer');
    appDrawers.each(function(i, el){
        var drawerType = $(el).attr('data-type');
        console.log(i, el, drawerType)
    })
})

</script>