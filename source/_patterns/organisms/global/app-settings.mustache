<aside class="app__settings-drawer mdc-drawer mdc-drawer--right mdc-drawer--temporary mdc-typography">
  <nav class="mdc-drawer__drawer">
    <nav class="mdc-drawer__content u-p">

      <h3>Settings</h3>
      <p>Adjust settings in real time.</p>

      <hr class="mdc-list-divider" />
      <h4>Layout Options</h4>
      <div class="layout-options u-pb flex flex--col">

        {{> atoms-checkbox(label: "Fixed header", name: "fixedHeader", value: false) }} 
        
        {{> atoms-checkbox(label: "Logo sidenav", name: "logoSidenav", value: false) }} 
        {{> atoms-checkbox(label: "Fixed sidenav", name: "fixedSidenav", value: false) }} 
        {{> atoms-checkbox(label: "Collapsed sidenav", name: "collapsedSidenav") }}

      </div>

      <script>
        $('[type="checkbox"]').bind('change', function (e) {
          console.log(e.target.name, e.target.checked);
        })
      </script>


      <hr class="mdc-list-divider" />
      <h4>Color Options</h4>
      <div class="color-options">
        {{> organisms-settings-colors }}
      </div>


      <ul class="mdc-list">

        <li class="mdc-list-group__subheader">Sidebar width</li>
        <li class="mdc-list-item">
          {{> atoms-slider(name: "sidebarWidth", max: 260, min: 160) }}
        </li>
        <li role="separator" class="mdc-list-divider"></li>
      </ul>
    </nav>
  </nav>
</aside>

<style>
  .mdc-drawer.mdc-drawer--right .mdc-drawer__drawer {
    -webkit-transform: translateX(107%);
    transform: translateX(107%);
    -webkit-transform: translateX(calc(100% + 20px));
    transform: translateX(calc(100% + 20px));
    left: auto;
    right: 0;
  }

  .mdc-drawer--open.mdc-drawer--right .mdc-drawer__drawer {
    -webkit-transform: none;
    transform: none;
    border-right: 0px;
    border-left: 1px solid #e4e4e4;
  }

  .mdc-drawer--right {
    right: 0 !important;
    left: auto !important;
  }
</style>

<script>
  (function () {
    let settingsToggle = document.querySelector('.app__settings-toggle-alt');
    if (settingsToggle) {
      settingsToggle.addEventListener('click', function (e) {
        console.log('Find and toggle settings drawer');
        let appDrawer = document.querySelector('.app__settings-drawer');
        if (appDrawer) {
          let drawer = new mdc.drawer.MDCTemporaryDrawer(appDrawer);
          drawer.open = !drawer.open;
        }
      });
    }
  })();
</script>